{"ast":null,"code":"var _excluded = [\"children\", \"className\", \"disabledTabClassName\", \"domRef\", \"focus\", \"forceRenderTabPanel\", \"onSelect\", \"selectedIndex\", \"selectedTabClassName\", \"selectedTabPanelClassName\", \"environment\", \"disableUpDownKeys\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport PropTypes from 'prop-types';\nimport React, { cloneElement, useRef } from 'react';\nimport cx from 'clsx';\nimport uuid from '../helpers/uuid';\nimport { childrenPropType } from '../helpers/propTypes';\nimport { getTabsCount as getTabsCountHelper } from '../helpers/count';\nimport { deepMap } from '../helpers/childrenDeepMap';\nimport { isTabList, isTabPanel, isTab } from '../helpers/elementTypes';\n\nfunction isNode(node) {\n  return node && 'getAttribute' in node;\n} // Determine if a node from event.target is a Tab element\n\n\nfunction isTabNode(node) {\n  return isNode(node) && node.getAttribute('data-rttab');\n} // Determine if a tab node is disabled\n\n\nfunction isTabDisabled(node) {\n  return isNode(node) && node.getAttribute('aria-disabled') === 'true';\n}\n\nvar canUseActiveElement;\n\nfunction determineCanUseActiveElement(environment) {\n  var env = environment || (typeof window !== 'undefined' ? window : undefined);\n\n  try {\n    canUseActiveElement = !!(typeof env !== 'undefined' && env.document && env.document.activeElement);\n  } catch (e) {\n    // Work around for IE bug when accessing document.activeElement in an iframe\n    // Refer to the following resources:\n    // http://stackoverflow.com/a/10982960/369687\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12733599\n    canUseActiveElement = false;\n  }\n}\n\nvar defaultProps = {\n  className: 'react-tabs',\n  focus: false\n};\nvar propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: childrenPropType,\n  direction: PropTypes.oneOf(['rtl', 'ltr']),\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  disabledTabClassName: PropTypes.string,\n  disableUpDownKeys: PropTypes.bool,\n  domRef: PropTypes.func,\n  focus: PropTypes.bool,\n  forceRenderTabPanel: PropTypes.bool,\n  onSelect: PropTypes.func.isRequired,\n  selectedIndex: PropTypes.number.isRequired,\n  selectedTabClassName: PropTypes.string,\n  selectedTabPanelClassName: PropTypes.string,\n  environment: PropTypes.object\n} : {};\n\nvar UncontrolledTabs = function UncontrolledTabs(props) {\n  var tabNodes = useRef([]);\n  var tabIds = useRef([]);\n  var panelIds = useRef([]);\n\n  var _ref = useRef();\n\n  function setSelected(index, event) {\n    // Check index boundary\n    if (index < 0 || index >= getTabsCount()) return;\n    var onSelect = props.onSelect,\n        selectedIndex = props.selectedIndex; // Call change event handler\n\n    onSelect(index, selectedIndex, event);\n  }\n\n  function getNextTab(index) {\n    var count = getTabsCount(); // Look for non-disabled tab from index to the last tab on the right\n\n    for (var i = index + 1; i < count; i++) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    } // If no tab found, continue searching from first on left to index\n\n\n    for (var _i = 0; _i < index; _i++) {\n      if (!isTabDisabled(getTab(_i))) {\n        return _i;\n      }\n    } // No tabs are disabled, return index\n\n\n    return index;\n  }\n\n  function getPrevTab(index) {\n    var i = index; // Look for non-disabled tab from index to first tab on the left\n\n    while (i--) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    } // If no tab found, continue searching from last tab on right to index\n\n\n    i = getTabsCount();\n\n    while (i-- > index) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    } // No tabs are disabled, return index\n\n\n    return index;\n  }\n\n  function getFirstTab() {\n    var count = getTabsCount(); // Look for non disabled tab from the first tab\n\n    for (var i = 0; i < count; i++) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n\n  function getLastTab() {\n    var i = getTabsCount(); // Look for non disabled tab from the last tab\n\n    while (i--) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n\n  function getTabsCount() {\n    var children = props.children;\n    return getTabsCountHelper(children);\n  }\n\n  function getTab(index) {\n    return tabNodes.current[\"tabs-\" + index];\n  }\n\n  function getChildren() {\n    var index = 0;\n    var children = props.children,\n        disabledTabClassName = props.disabledTabClassName,\n        focus = props.focus,\n        forceRenderTabPanel = props.forceRenderTabPanel,\n        selectedIndex = props.selectedIndex,\n        selectedTabClassName = props.selectedTabClassName,\n        selectedTabPanelClassName = props.selectedTabPanelClassName,\n        environment = props.environment;\n    tabIds.current = tabIds.current || [];\n    panelIds.current = panelIds.current || [];\n    var diff = tabIds.current.length - getTabsCount(); // Add ids if new tabs have been added\n    // Don't bother removing ids, just keep them in case they are added again\n    // This is more efficient, and keeps the uuid counter under control\n\n    while (diff++ < 0) {\n      tabIds.current.push(uuid());\n      panelIds.current.push(uuid());\n    } // Map children to dynamically setup refs\n\n\n    return deepMap(children, function (child) {\n      var result = child; // Clone TabList and Tab components to have refs\n\n      if (isTabList(child)) {\n        var listIndex = 0; // Figure out if the current focus in the DOM is set on a Tab\n        // If it is we should keep the focus on the next selected tab\n\n        var wasTabFocused = false;\n\n        if (canUseActiveElement == null) {\n          determineCanUseActiveElement(environment);\n        }\n\n        if (canUseActiveElement) {\n          wasTabFocused = React.Children.toArray(child.props.children).filter(isTab).some(function (tab, i) {\n            var env = environment || (typeof window !== 'undefined' ? window : undefined);\n            return env && env.document.activeElement === getTab(i);\n          });\n        }\n\n        result = /*#__PURE__*/cloneElement(child, {\n          children: deepMap(child.props.children, function (tab) {\n            var key = \"tabs-\" + listIndex;\n            var selected = selectedIndex === listIndex;\n            var props = {\n              tabRef: function tabRef(node) {\n                tabNodes.current[key] = node;\n              },\n              id: tabIds.current[listIndex],\n              panelId: panelIds.current[listIndex],\n              selected: selected,\n              focus: selected && (focus || wasTabFocused)\n            };\n            if (selectedTabClassName) props.selectedClassName = selectedTabClassName;\n            if (disabledTabClassName) props.disabledClassName = disabledTabClassName;\n            listIndex++;\n            return /*#__PURE__*/cloneElement(tab, props);\n          })\n        });\n      } else if (isTabPanel(child)) {\n        var _props = {\n          id: panelIds.current[index],\n          tabId: tabIds.current[index],\n          selected: selectedIndex === index\n        };\n        if (forceRenderTabPanel) _props.forceRender = forceRenderTabPanel;\n        if (selectedTabPanelClassName) _props.selectedClassName = selectedTabPanelClassName;\n        index++;\n        result = /*#__PURE__*/cloneElement(child, _props);\n      }\n\n      return result;\n    });\n  }\n\n  function handleKeyDown(e) {\n    var direction = props.direction,\n        disableUpDownKeys = props.disableUpDownKeys;\n\n    if (isTabFromContainer(e.target)) {\n      var index = props.selectedIndex;\n      var preventDefault = false;\n      var useSelectedIndex = false;\n\n      if (e.keyCode === 32 || e.keyCode === 13) {\n        preventDefault = true;\n        useSelectedIndex = false;\n        handleClick(e);\n      }\n\n      if (e.keyCode === 37 || !disableUpDownKeys && e.keyCode === 38) {\n        // Select next tab to the left, validate if up arrow is not disabled\n        if (direction === 'rtl') {\n          index = getNextTab(index);\n        } else {\n          index = getPrevTab(index);\n        }\n\n        preventDefault = true;\n        useSelectedIndex = true;\n      } else if (e.keyCode === 39 || !disableUpDownKeys && e.keyCode === 40) {\n        // Select next tab to the right, validate if down arrow is not disabled\n        if (direction === 'rtl') {\n          index = getPrevTab(index);\n        } else {\n          index = getNextTab(index);\n        }\n\n        preventDefault = true;\n        useSelectedIndex = true;\n      } else if (e.keyCode === 35) {\n        // Select last tab (End key)\n        index = getLastTab();\n        preventDefault = true;\n        useSelectedIndex = true;\n      } else if (e.keyCode === 36) {\n        // Select first tab (Home key)\n        index = getFirstTab();\n        preventDefault = true;\n        useSelectedIndex = true;\n      } // This prevents scrollbars from moving around\n\n\n      if (preventDefault) {\n        e.preventDefault();\n      } // Only use the selected index in the state if we're not using the tabbed index\n\n\n      if (useSelectedIndex) {\n        setSelected(index, e);\n      }\n    }\n  }\n\n  function handleClick(e) {\n    var node = e.target;\n\n    do {\n      if (isTabFromContainer(node)) {\n        if (isTabDisabled(node)) {\n          return;\n        }\n\n        var index = [].slice.call(node.parentNode.children).filter(isTabNode).indexOf(node);\n        setSelected(index, e);\n        return;\n      }\n    } while ((node = node.parentNode) != null);\n  }\n  /**\n   * Determine if a node from event.target is a Tab element for the current Tabs container.\n   * If the clicked element is not a Tab, it returns false.\n   * If it finds another Tabs container between the Tab and `this`, it returns false.\n   */\n\n\n  function isTabFromContainer(node) {\n    // return immediately if the clicked element is not a Tab.\n    if (!isTabNode(node)) {\n      return false;\n    } // Check if the first occurrence of a Tabs container is `this` one.\n\n\n    var nodeAncestor = node.parentElement;\n\n    do {\n      if (nodeAncestor === _ref.current) return true;\n      if (nodeAncestor.getAttribute('data-rttabs')) break;\n      nodeAncestor = nodeAncestor.parentElement;\n    } while (nodeAncestor);\n\n    return false;\n  }\n\n  var children = props.children,\n      className = props.className,\n      disabledTabClassName = props.disabledTabClassName,\n      domRef = props.domRef,\n      focus = props.focus,\n      forceRenderTabPanel = props.forceRenderTabPanel,\n      onSelect = props.onSelect,\n      selectedIndex = props.selectedIndex,\n      selectedTabClassName = props.selectedTabClassName,\n      selectedTabPanelClassName = props.selectedTabPanelClassName,\n      environment = props.environment,\n      disableUpDownKeys = props.disableUpDownKeys,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, attributes, {\n    className: cx(className),\n    onClick: handleClick,\n    onKeyDown: handleKeyDown,\n    ref: function ref(node) {\n      _ref.current = node;\n      if (domRef) domRef(node);\n    },\n    \"data-rttabs\": true\n  }), getChildren());\n};\n\nUncontrolledTabs.defaultProps = defaultProps;\nUncontrolledTabs.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nexport default UncontrolledTabs;","map":{"version":3,"sources":["C:/Users/victordandolini/Documents/GitHub/GitHub-Interface-React/node_modules/react-tabs/esm/components/UncontrolledTabs.js"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","PropTypes","React","cloneElement","useRef","cx","uuid","childrenPropType","getTabsCount","getTabsCountHelper","deepMap","isTabList","isTabPanel","isTab","isNode","node","isTabNode","getAttribute","isTabDisabled","canUseActiveElement","determineCanUseActiveElement","environment","env","window","undefined","document","activeElement","e","defaultProps","className","focus","propTypes","process","NODE_ENV","children","direction","oneOf","oneOfType","string","array","object","disabledTabClassName","disableUpDownKeys","bool","domRef","func","forceRenderTabPanel","onSelect","isRequired","selectedIndex","number","selectedTabClassName","selectedTabPanelClassName","UncontrolledTabs","props","tabNodes","tabIds","panelIds","_ref","setSelected","index","event","getNextTab","count","getTab","_i","getPrevTab","getFirstTab","getLastTab","current","getChildren","diff","push","child","result","listIndex","wasTabFocused","Children","toArray","filter","some","tab","selected","tabRef","id","panelId","selectedClassName","disabledClassName","_props","tabId","forceRender","handleKeyDown","isTabFromContainer","preventDefault","useSelectedIndex","keyCode","handleClick","slice","parentNode","nodeAncestor","parentElement","attributes","createElement","onClick","onKeyDown","ref"],"mappings":"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","sourcesContent":["var _excluded = [\"children\", \"className\", \"disabledTabClassName\", \"domRef\", \"focus\", \"forceRenderTabPanel\", \"onSelect\", \"selectedIndex\", \"selectedTabClassName\", \"selectedTabPanelClassName\", \"environment\", \"disableUpDownKeys\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport PropTypes from 'prop-types';\nimport React, { cloneElement, useRef } from 'react';\nimport cx from 'clsx';\nimport uuid from '../helpers/uuid';\nimport { childrenPropType } from '../helpers/propTypes';\nimport { getTabsCount as getTabsCountHelper } from '../helpers/count';\nimport { deepMap } from '../helpers/childrenDeepMap';\nimport { isTabList, isTabPanel, isTab } from '../helpers/elementTypes';\n\nfunction isNode(node) {\n  return node && 'getAttribute' in node;\n} // Determine if a node from event.target is a Tab element\n\n\nfunction isTabNode(node) {\n  return isNode(node) && node.getAttribute('data-rttab');\n} // Determine if a tab node is disabled\n\n\nfunction isTabDisabled(node) {\n  return isNode(node) && node.getAttribute('aria-disabled') === 'true';\n}\n\nvar canUseActiveElement;\n\nfunction determineCanUseActiveElement(environment) {\n  var env = environment || (typeof window !== 'undefined' ? window : undefined);\n\n  try {\n    canUseActiveElement = !!(typeof env !== 'undefined' && env.document && env.document.activeElement);\n  } catch (e) {\n    // Work around for IE bug when accessing document.activeElement in an iframe\n    // Refer to the following resources:\n    // http://stackoverflow.com/a/10982960/369687\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12733599\n    canUseActiveElement = false;\n  }\n}\n\nvar defaultProps = {\n  className: 'react-tabs',\n  focus: false\n};\nvar propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: childrenPropType,\n  direction: PropTypes.oneOf(['rtl', 'ltr']),\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  disabledTabClassName: PropTypes.string,\n  disableUpDownKeys: PropTypes.bool,\n  domRef: PropTypes.func,\n  focus: PropTypes.bool,\n  forceRenderTabPanel: PropTypes.bool,\n  onSelect: PropTypes.func.isRequired,\n  selectedIndex: PropTypes.number.isRequired,\n  selectedTabClassName: PropTypes.string,\n  selectedTabPanelClassName: PropTypes.string,\n  environment: PropTypes.object\n} : {};\n\nvar UncontrolledTabs = function UncontrolledTabs(props) {\n  var tabNodes = useRef([]);\n  var tabIds = useRef([]);\n  var panelIds = useRef([]);\n\n  var _ref = useRef();\n\n  function setSelected(index, event) {\n    // Check index boundary\n    if (index < 0 || index >= getTabsCount()) return;\n    var onSelect = props.onSelect,\n        selectedIndex = props.selectedIndex; // Call change event handler\n\n    onSelect(index, selectedIndex, event);\n  }\n\n  function getNextTab(index) {\n    var count = getTabsCount(); // Look for non-disabled tab from index to the last tab on the right\n\n    for (var i = index + 1; i < count; i++) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    } // If no tab found, continue searching from first on left to index\n\n\n    for (var _i = 0; _i < index; _i++) {\n      if (!isTabDisabled(getTab(_i))) {\n        return _i;\n      }\n    } // No tabs are disabled, return index\n\n\n    return index;\n  }\n\n  function getPrevTab(index) {\n    var i = index; // Look for non-disabled tab from index to first tab on the left\n\n    while (i--) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    } // If no tab found, continue searching from last tab on right to index\n\n\n    i = getTabsCount();\n\n    while (i-- > index) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    } // No tabs are disabled, return index\n\n\n    return index;\n  }\n\n  function getFirstTab() {\n    var count = getTabsCount(); // Look for non disabled tab from the first tab\n\n    for (var i = 0; i < count; i++) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n\n  function getLastTab() {\n    var i = getTabsCount(); // Look for non disabled tab from the last tab\n\n    while (i--) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n\n  function getTabsCount() {\n    var children = props.children;\n    return getTabsCountHelper(children);\n  }\n\n  function getTab(index) {\n    return tabNodes.current[\"tabs-\" + index];\n  }\n\n  function getChildren() {\n    var index = 0;\n    var children = props.children,\n        disabledTabClassName = props.disabledTabClassName,\n        focus = props.focus,\n        forceRenderTabPanel = props.forceRenderTabPanel,\n        selectedIndex = props.selectedIndex,\n        selectedTabClassName = props.selectedTabClassName,\n        selectedTabPanelClassName = props.selectedTabPanelClassName,\n        environment = props.environment;\n    tabIds.current = tabIds.current || [];\n    panelIds.current = panelIds.current || [];\n    var diff = tabIds.current.length - getTabsCount(); // Add ids if new tabs have been added\n    // Don't bother removing ids, just keep them in case they are added again\n    // This is more efficient, and keeps the uuid counter under control\n\n    while (diff++ < 0) {\n      tabIds.current.push(uuid());\n      panelIds.current.push(uuid());\n    } // Map children to dynamically setup refs\n\n\n    return deepMap(children, function (child) {\n      var result = child; // Clone TabList and Tab components to have refs\n\n      if (isTabList(child)) {\n        var listIndex = 0; // Figure out if the current focus in the DOM is set on a Tab\n        // If it is we should keep the focus on the next selected tab\n\n        var wasTabFocused = false;\n\n        if (canUseActiveElement == null) {\n          determineCanUseActiveElement(environment);\n        }\n\n        if (canUseActiveElement) {\n          wasTabFocused = React.Children.toArray(child.props.children).filter(isTab).some(function (tab, i) {\n            var env = environment || (typeof window !== 'undefined' ? window : undefined);\n            return env && env.document.activeElement === getTab(i);\n          });\n        }\n\n        result = /*#__PURE__*/cloneElement(child, {\n          children: deepMap(child.props.children, function (tab) {\n            var key = \"tabs-\" + listIndex;\n            var selected = selectedIndex === listIndex;\n            var props = {\n              tabRef: function tabRef(node) {\n                tabNodes.current[key] = node;\n              },\n              id: tabIds.current[listIndex],\n              panelId: panelIds.current[listIndex],\n              selected: selected,\n              focus: selected && (focus || wasTabFocused)\n            };\n            if (selectedTabClassName) props.selectedClassName = selectedTabClassName;\n            if (disabledTabClassName) props.disabledClassName = disabledTabClassName;\n            listIndex++;\n            return /*#__PURE__*/cloneElement(tab, props);\n          })\n        });\n      } else if (isTabPanel(child)) {\n        var _props = {\n          id: panelIds.current[index],\n          tabId: tabIds.current[index],\n          selected: selectedIndex === index\n        };\n        if (forceRenderTabPanel) _props.forceRender = forceRenderTabPanel;\n        if (selectedTabPanelClassName) _props.selectedClassName = selectedTabPanelClassName;\n        index++;\n        result = /*#__PURE__*/cloneElement(child, _props);\n      }\n\n      return result;\n    });\n  }\n\n  function handleKeyDown(e) {\n    var direction = props.direction,\n        disableUpDownKeys = props.disableUpDownKeys;\n\n    if (isTabFromContainer(e.target)) {\n      var index = props.selectedIndex;\n      var preventDefault = false;\n      var useSelectedIndex = false;\n\n      if (e.keyCode === 32 || e.keyCode === 13) {\n        preventDefault = true;\n        useSelectedIndex = false;\n        handleClick(e);\n      }\n\n      if (e.keyCode === 37 || !disableUpDownKeys && e.keyCode === 38) {\n        // Select next tab to the left, validate if up arrow is not disabled\n        if (direction === 'rtl') {\n          index = getNextTab(index);\n        } else {\n          index = getPrevTab(index);\n        }\n\n        preventDefault = true;\n        useSelectedIndex = true;\n      } else if (e.keyCode === 39 || !disableUpDownKeys && e.keyCode === 40) {\n        // Select next tab to the right, validate if down arrow is not disabled\n        if (direction === 'rtl') {\n          index = getPrevTab(index);\n        } else {\n          index = getNextTab(index);\n        }\n\n        preventDefault = true;\n        useSelectedIndex = true;\n      } else if (e.keyCode === 35) {\n        // Select last tab (End key)\n        index = getLastTab();\n        preventDefault = true;\n        useSelectedIndex = true;\n      } else if (e.keyCode === 36) {\n        // Select first tab (Home key)\n        index = getFirstTab();\n        preventDefault = true;\n        useSelectedIndex = true;\n      } // This prevents scrollbars from moving around\n\n\n      if (preventDefault) {\n        e.preventDefault();\n      } // Only use the selected index in the state if we're not using the tabbed index\n\n\n      if (useSelectedIndex) {\n        setSelected(index, e);\n      }\n    }\n  }\n\n  function handleClick(e) {\n    var node = e.target;\n\n    do {\n      if (isTabFromContainer(node)) {\n        if (isTabDisabled(node)) {\n          return;\n        }\n\n        var index = [].slice.call(node.parentNode.children).filter(isTabNode).indexOf(node);\n        setSelected(index, e);\n        return;\n      }\n    } while ((node = node.parentNode) != null);\n  }\n  /**\n   * Determine if a node from event.target is a Tab element for the current Tabs container.\n   * If the clicked element is not a Tab, it returns false.\n   * If it finds another Tabs container between the Tab and `this`, it returns false.\n   */\n\n\n  function isTabFromContainer(node) {\n    // return immediately if the clicked element is not a Tab.\n    if (!isTabNode(node)) {\n      return false;\n    } // Check if the first occurrence of a Tabs container is `this` one.\n\n\n    var nodeAncestor = node.parentElement;\n\n    do {\n      if (nodeAncestor === _ref.current) return true;\n      if (nodeAncestor.getAttribute('data-rttabs')) break;\n      nodeAncestor = nodeAncestor.parentElement;\n    } while (nodeAncestor);\n\n    return false;\n  }\n\n  var children = props.children,\n      className = props.className,\n      disabledTabClassName = props.disabledTabClassName,\n      domRef = props.domRef,\n      focus = props.focus,\n      forceRenderTabPanel = props.forceRenderTabPanel,\n      onSelect = props.onSelect,\n      selectedIndex = props.selectedIndex,\n      selectedTabClassName = props.selectedTabClassName,\n      selectedTabPanelClassName = props.selectedTabPanelClassName,\n      environment = props.environment,\n      disableUpDownKeys = props.disableUpDownKeys,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, attributes, {\n    className: cx(className),\n    onClick: handleClick,\n    onKeyDown: handleKeyDown,\n    ref: function ref(node) {\n      _ref.current = node;\n      if (domRef) domRef(node);\n    },\n    \"data-rttabs\": true\n  }), getChildren());\n};\n\nUncontrolledTabs.defaultProps = defaultProps;\nUncontrolledTabs.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nexport default UncontrolledTabs;"]},"metadata":{},"sourceType":"module"}